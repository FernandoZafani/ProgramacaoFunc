# Vamos utilizar o pacote Selenium Python para manipular browsers via cÃ³digo:
# https://selenium-python.readthedocs.io/
#
# Para isso, ele precisa ser instalado via pip (de preferÃªncia com o VS Code fechado):
# python -m pip install selenium
#
# Depois de instalar o Selenium Python, Ã© necessÃ¡rio instalar o driver referente
# ao browser que serÃ¡ utilizado:
#
# Chrome: https://sites.google.com/a/chromium.org/chromedriver/downloads
# Edge: https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/
# Firefox: https://github.com/mozilla/geckodriver/releases
# Safari: https://webkit.org/blog/6900/webdriver-support-in-safari-10/
#
# Depois de baixar o driver, garantir que ele seja instalado/descompactado em uma
# pasta que pertenÃ§a ao PATH global do sistema (de preferÃªncia com o VS Code fechado).
#
# No Linux, podem ser as pastas /usr/bin, /usr/local/bin ou outra que esteja no PATH.
# Para adicionar outra pasta ao PATH, basta editar o arquivo ~/.bashrc, e adicionar
# uma linha parecida com essa:
# export PATH=/nova/pasta/para/adicionar:${PATH}
#
# No Windows, o PATH pode ser editado clicando com o botÃ£o direito sobre o Ã­cone do
# Computador (no Windows Explorer), depois no menu "Propriedades", em seguida "ConfiguraÃ§Ãµes
# avanÃ§adas do sistema" e, por fim, em "VariÃ¡veis de Ambiente".
import sys
import time
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

def extrair_inteiro(texto):
	try:
		i = texto.rindex(' ')
		sem_unidade = texto[:i]

		# Ã€s vezes, esse valor pode iniciar pelo ano...
		i = sem_unidade.find(' ')
		if i >= 0:
			sem_unidade = sem_unidade[(i + 1):]

		sem_virgula = sem_unidade.replace(',', '')

		return int(sem_virgula)
	except:
		return 0

driver = webdriver.Chrome()
driver.get('https://ourworldindata.org/energy-mix#energy-mix-what-sources-do-we-get-our-energy-from')

botao_cookie = WebDriverWait(driver, 20).until(
	EC.element_to_be_clickable((By.CSS_SELECTOR, 'button[data-track-note="cookie-notice"]'))
)

# Ã€s vezes o botÃ£o nÃ£o era clicÃ¡vel de verdade logo de primeira ðŸ˜… ...
time.sleep(2)

botao_cookie.click()

botoes_tabela = WebDriverWait(driver, 20).until(
	EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'a[data-track-note="chart-click-table"]'))
)

botoes_tabela[1].click()

corpo_tabela = WebDriverWait(driver, 20).until(
	EC.presence_of_element_located((By.CSS_SELECTOR, 'table.data-table > tbody'))
)

linhas = corpo_tabela.find_elements_by_tag_name('tr')

dados = []

for linha in linhas:
	colunas = linha.find_elements_by_tag_name('td')

	nome = colunas[0].text
	valor1900 = colunas[1].text
	valor2019 = colunas[2].text

	dados.append({
		'nome': nome,
		'valor1900': extrair_inteiro(valor1900),
		'valor2019': extrair_inteiro(valor2019)
	})

print(dados)

driver.close()
